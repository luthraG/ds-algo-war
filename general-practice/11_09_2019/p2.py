'''
    Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million,
    find the sum of the even-valued terms.
'''

from timeit import default_timer as timer

upper_limit = int(input('Enter the upper limit :: '))
start = timer()
sum_even_values = 0

term = 0
sequence = [1, 2]

if upper_limit >= 2:
    sum_even_values += 2

while term <= upper_limit:
    term = sequence[0] + sequence[1]
    sequence[0] = sequence[1]
    sequence[1] = term

    if term <= upper_limit and term & 1 != 1:
        sum_even_values += term

end = timer()
print('Sum of even valued terms of Fibonacci upto {} is {}'.format(upper_limit, sum_even_values))
print('Time taken is : {}'.format(end - start))